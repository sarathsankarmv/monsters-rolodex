{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAOaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,kBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCPTC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAClD,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCFhCM,G,WAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SAASF,YAAaA,EAC3BG,SAAUF,MC0CHG,E,kDAvCb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAACI,GAAO,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAd1D,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,gEAQO,IAAD,OACjBI,MAAM,8CAA8CC,MAC9C,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAC3B,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAOnC,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpG,OACE,sBAAK9B,UAAU,MAAf,UAEE,kDAEA,cAAC,EAAD,CACCW,YAAY,gBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCVI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92c16a01.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\n\n\n\n\nexport const Card = (props) => (\n    <div className=\"card-container \">\n    <img alt=\"Monster\" src={`https://robohash.org/${props.monster.id}/?set=set2&size=180x180`}></img>\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport { Card } from '../card/card.component'\n\n\nexport const CardList = (props) => (\n    <div className=\"card-list\">{props.monsters.map(monster => (\n        <Card monster={monster} key={monster.id}></Card>\n      ))}</div>\n);","import React from 'react'\nimport './search-box.styles.css'\n\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n        className=\"search\"\n        type=\"search\" placeholder={placeholder} \n        onChange={handleChange}></input>\n)\n\n\n\n","import './App.css';\nimport {Component} from 'react'\nimport {CardList} from './components/card-list/card-list.component'\nimport './components/card-list/card-list.styles.css'\nimport './components/search-box/search-box.styles.css'\nimport {SearchBox} from './components/search-box/search-box-component'\n\n\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(\n          response => response.json()).then(\n            users => this.setState({monsters: users})\n    )\n  }\n\n\n  handleChange = (e) => {this.setState({searchField: e.target.value})}\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n\n        <h1>Monsters Rolodex</h1>\n\n        <SearchBox\n         placeholder=\"Search here..\"\n         handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}/>\n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}